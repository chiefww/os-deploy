
//** @name КонфигурацияПриложения
//** @desc Класс для работы с конфигурационным файлом

#Использовать json

Перем ПутьКФайлу;

Перем СписокБаз;
Перем Параметры;
Перем УчетныеЗаписиПочты;
Перем ОписанияFTP;

//* @desc Конструктор.
//* @param пПутьКФайлу {Строка} Путь к файлу конфигурации.
Процедура ПриСозданииОбъекта(пПутьКФайлу) Экспорт
	
	ПутьКФайлу = пПутьКФайлу;
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.Прочитать(ПутьКФайлу);
	Текст = ТекстовыйДокумент.ПолучитьТекст();
	
	Парсер = Новый ПарсерJSON;
	Значения = Парсер.ПрочитатьJSON(Текст, Истина);
	
	СписокБаз = Новый Соответствие;
	Параметры = Новый Соответствие;
	УчетныеЗаписиПочты = Новый Соответствие;
	ОписанияFTP = Новый Соответствие;
	
	Для Каждого КлючЗначение Из Значения Цикл
		Если КлючЗначение.Ключ = "bases" Тогда
			ИнициализироватьСписокБаз(КлючЗначение.Значение);
		Иначе
			Параметры.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ИнициализироватьСписокБаз(Значения)
	
	Если Значения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого База Из Значения Цикл
		ИмяБазы = База.Ключ;
		ЗначенияБазы = База.Значение;
		ОписаниеБазы = Новый ОписаниеБазы(ИмяБазы, ЗначенияБазы);
		
		// TODO: Костыль для применения в ранних версиях
		Если Не ЗначениеЗаполнено(ОписаниеБазы.Идентификатор) Тогда
			ОписаниеБазы.ПриСозданииОбъекта(ИмяБазы, ЗначенияБазы);
		КонецЕсли;
		
		СписокБаз.Вставить(ИмяБазы, ОписаниеБазы);
	КонецЦикла;
	
КонецПроцедуры

//* @desc Получает описание базы данных из конфигурационного файла.
//* @param Имя {Строка} Имя базы данных как оно задано в конфигурационном файле.
//* @return {ОписаниеБазы, Неопределено} Неопределено, если база с таким ключом не найдена в файле.
Функция ПолучитьБазу(Имя) Экспорт
	
	Возврат СписокБаз.Получить(Имя);
	
КонецФункции

//* @desc Получает параметр из конфигурационного файла.
//* @param Имя {Строка} Имя параметра как оно задано в конфигурационном файле.
//* @return {Произвольный} Неопределено, если параметр с таким ключом не найден в файле.
Функция ПолучитьПараметр(Имя) Экспорт
	
	Возврат Параметры.Получить(Имя);
	
КонецФункции

//* @desc Получает описание учетной записи электронной почты из конфигурационного файла.
//* @param Имя {Строка} Имя параметра как оно задано в конфигурационном файле.
//* @return {ОписаниеУчетнойЗаписиПочты, Неопределено} Неопределено, если учетная запись с таким ключом.
//*     не найдена в файле
Функция ПолучитьАдресПочты(Имя) Экспорт
	
	ОписаниеЗаписи = УчетныеЗаписиПочты.Получить(Имя);
	
	Если ОписаниеЗаписи <> Неопределено Тогда
		Возврат ОписаниеЗаписи;
	КонецЕсли;
	
	Значения = ПолучитьПараметр(Имя);
	
	Если Значения = Неопределено Тогда
		Возврат Неопределено;
	Иначе
		ОписаниеЗаписи = Новый ОписаниеУчетнойЗаписиПочты(Имя, Значения);
		
		// TODO: Костыль для применения в ранних версиях
		Если Не ЗначениеЗаполнено(ОписаниеЗаписи.Идентификатор) Тогда
			ОписаниеЗаписи.ПриСозданииОбъекта(Имя, Значения);
		КонецЕсли;
		
		УчетныеЗаписиПочты.Вставить(Имя, ОписаниеЗаписи);
	КонецЕсли;
	
	Возврат ОписаниеЗаписи;
	
КонецФункции

//* @desc Получает описание учетной записи ftp-сервера из конфигурационного файла.
//* @param Имя {Строка} Имя параметра как оно задано в конфигурационном файле.
//* @return {ОписаниеFTPСоединения, Неопределено} Неопределено, если подключение с таким ключом
//*     не найдено в файле.
Функция ПолучитьFTP(Имя) Экспорт
	
	Описание = ОписанияFTP.Получить(Имя);
	
	Если Описание <> Неопределено Тогда
		Возврат Описание;
	КонецЕсли;
	
	Значения = ПолучитьПараметр(Имя);
	
	Если Значения = Неопределено Тогда
		Возврат Неопределено;
	Иначе
		Описание = Новый ОписаниеFTPСоединения(Имя, Значения);
		
		// TODO: Костыль для применения в ранних версиях
		Если Не ЗначениеЗаполнено(Описание.Идентификатор) Тогда
			Описание.ПриСозданииОбъекта(Имя, Значения);
		КонецЕсли;
		
		ОписанияFTP.Вставить(Имя, Описание);
	КонецЕсли;
	
	Возврат Описание;
	
КонецФункции
