
//** @name СобытияПриложения
//** @desc Модуль служебных событий приложения

#Использовать cmdline

//* @desc Событие должно быть вызвано перед выполнением действий.
//*     Инициализирует логирование.
//*     Обрабатывает параметры командной строки: <br/>
//*     Предопределенный параметр <b>-start</b>. Указывает номер действия, с которого надо начать.
//*     Все действия до этого шага будут пропущены. Необязательный.<br/>
//*     Предопределенный параметр <b>-end</b>. Указывает номер действия, на котором нужно остановиться.
//*     Действие будет выполнено, все последующие действия будут пропущены. Необязательный.<br/>
//*     Предопределенный параметр <b>-steps</b>. Нужен для просмотра списка действий,
//*     все действия будут пропущены. Необязательный.<br/>
//*     Пользовательские параметры. После предопределенных параметров можно указать любые свои параметры
//*     в виде ключа и значения. Пользовательские параметры будут считаны в переменную ПрочиеПараметры.<br/>
//*     Например, вызов скрипта oscript test.os -param1 "a" -param2 "b" заполнит соответствие ПрочиеПараметры
//*     двумя элементами, в первом ключ "-param1", значение "а", во втором ключ "-param2", значение "б".<br/>
//*     <b>Предопределенные параметры должны быть указаны до пользовательских.</b>
//* @param АргументыКоманднойСтроки {Массив}
//* @param ПрочиеПараметры {Соответствие}
Процедура ПередВыполнением(АргументыКоманднойСтроки, ПрочиеПараметры) Экспорт
	
	Парсер = Новый ПарсерАргументовКоманднойСтроки;
	Парсер.ДобавитьПараметрФлаг("-steps");
	Парсер.ДобавитьИменованныйПараметр("-start");
	Парсер.ДобавитьИменованныйПараметр("-end");
	Парсер.ДобавитьПараметрКоллекция("ПрочиеПараметры");
	
	ЗначенияПараметров = Парсер.Разобрать(АргументыКоманднойСтроки);
	
	ВыполнениеДействий.ПередВыполнением(ЗначенияПараметров);
	
	ПрочиеПараметры = Новый Соответствие;
	
	Если ЗначенияПараметров.Получить("ПрочиеПараметры") <> Неопределено Тогда
		ЭтоКлюч = Истина;
		Ключ = Неопределено;
		Значение = Неопределено;
		
		Для Каждого Параметр Из ЗначенияПараметров.Получить("ПрочиеПараметры") Цикл
			Если ЭтоКлюч Тогда
				Ключ = Параметр;
			Иначе
				Значение = Параметр;
				ПрочиеПараметры.Вставить(Ключ, Значение);
			КонецЕсли;
			
			ЭтоКлюч = Не ЭтоКлюч;
		КонецЦикла;
	КонецЕсли;
	
	ВыводЛога.Инициализировать();
	
КонецПроцедуры

//* @desc Событие должно быть вызвано после выполнения действий. Закрывает временный файл лога и удаляет его.
Процедура ПослеВыполнения() Экспорт
	
	ВыводЛога.Закрыть();
	
КонецПроцедуры
