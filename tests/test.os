
#Использовать asserts
#Использовать ".."

Перем мКонфиг;

Функция ПолучитьСписокТестов(Тестирование) Экспорт
	
	МассивТестов = Новый Массив;
	
	МассивТестов.Добавить("ТестДолжен_ПрочитатьКонфигурацию");
	МассивТестов.Добавить("ТестДолжен_ПроверитьФайловуюБазуСПользователем");
	МассивТестов.Добавить("ТестДолжен_ПроверитьФайловуюБазуБезПользователя");
	МассивТестов.Добавить("ТестДолжен_ПроверитьСервернуюБазу");
	МассивТестов.Добавить("ТестДолжен_ПроверитьНесуществующуюБазу");
	МассивТестов.Добавить("ТестДолжен_ПроверитьПараметры");
	
	Возврат МассивТестов;
	
КонецФункции

Процедура ТестДолжен_ПрочитатьКонфигурацию() Экспорт
	
	мКонфиг = Новый КонфигурацияПриложения(ОбъединитьПути(ТекущийСценарий().Каталог, "config.json"));
	
	Ожидаем
		.Что(мКонфиг).ИмеетТип("КонфигурацияПриложения");
		
КонецПроцедуры

Процедура ТестДолжен_ПроверитьФайловуюБазуСПользователем() Экспорт
	
	База = мКонфиг.ПолучитьБазу("base1");
	
	Ожидаем
		.Что(База).ИмеетТип("ОписаниеБазы")
		.Что(База.СтрокаПодключения).Равно("File='C:\base1'")
		.Что(База.Пользователь).Равно("Администратор")
		.Что(База.Пароль).Равно("123")
		.Что(База.ВерсияПлатформы).Равно("8.3")
		.Что(База.ЭтоФайловаяБаза()).ЕстьИстина()
		.Что(База.ПолучитьПутьКБазе()).Равно("C:\base1")
		.Что(База.ПолучитьИмяСервера()).ЕстьНеопределено()
		.Что(База.ПолучитьИмяБазы()).ЕстьНеопределено();
		
КонецПроцедуры

Процедура ТестДолжен_ПроверитьФайловуюБазуБезПользователя() Экспорт
	
	База = мКонфиг.ПолучитьБазу("base2");
	
	Ожидаем
		.Что(База).ИмеетТип("ОписаниеБазы")
		.Что(База.СтрокаПодключения).Равно("File='C:\base2'")
		.Что(База.Пользователь).ЕстьНеопределено()
		.Что(База.Пароль).ЕстьНеопределено()
		.Что(База.ВерсияПлатформы).Равно("8.3")
		.Что(База.ЭтоФайловаяБаза()).ЕстьИстина()
		.Что(База.ПолучитьПутьКБазе()).Равно("C:\base2")
		.Что(База.ПолучитьИмяСервера()).ЕстьНеопределено()
		.Что(База.ПолучитьИмяБазы()).ЕстьНеопределено();
		
КонецПроцедуры

Процедура ТестДолжен_ПроверитьСервернуюБазу() Экспорт
	
	База = мКонфиг.ПолучитьБазу("base3");
	
	Ожидаем
		.Что(База).ИмеетТип("ОписаниеБазы")
		.Что(База.СтрокаПодключения).Равно("Srvr='srvr';Ref='base3'")
		.Что(База.Пользователь).Равно("Администратор")
		.Что(База.Пароль).Равно("123")
		.Что(База.ВерсияПлатформы).Равно("8.3.10")
		.Что(База.ЭтоФайловаяБаза()).ЕстьЛожь()
		.Что(База.ПолучитьПутьКБазе()).ЕстьНеопределено()
		.Что(База.ПолучитьИмяСервера()).Равно("srvr")
		.Что(База.ПолучитьИмяБазы()).Равно("base3");
		
КонецПроцедуры

Процедура ТестДолжен_ПроверитьНесуществующуюБазу() Экспорт
	
	База = мКонфиг.ПолучитьБазу("base4");
	
	Ожидаем
		.Что(База).ЕстьНеопределено();
		
КонецПроцедуры

Процедура ТестДолжен_ПроверитьПараметры() Экспорт
	
	Параметр1 = мКонфиг.ПолучитьПараметр("p1");
	Параметр2 = мКонфиг.ПолучитьПараметр("p2");
	Параметр3 = мКонфиг.ПолучитьПараметр("p3");
	Параметр4 = мКонфиг.ПолучитьПараметр("p4");
	Параметр5 = мКонфиг.ПолучитьПараметр("p5");
	
	Ожидаем
		.Что(Параметр1).Равно("param1")
		.Что(Параметр2).ЕстьИстина()
		.Что(Параметр3).ЕстьЛожь()
		.Что(Параметр4).Равно(10)
		.Что(Параметр5).ЕстьНеопределено();
		
КонецПроцедуры
